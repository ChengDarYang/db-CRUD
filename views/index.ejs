<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Balance App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .transaction-form {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
        }
        .table th {
            background-color: #f8f9fa;
        }
        .positive-amount {
            color: #198754;
        }
        .negative-amount {
            color: #dc3545;
        }
        .edit-form {
            display: none;
        }
        .edit-mode .view-mode {
            display: none;
        }
        .edit-mode .edit-form {
            display: block;
        }
        .action-menu {
            position: relative;
            padding-right: 1rem;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: flex-end;
        }
        .action-menu .dropdown-menu {
            min-width: 120px;
            padding: 0.5rem 0;
        }
        .action-menu .dropdown-item {
            padding: 0.5rem 1rem;
            color: #212529;
        }
        .action-menu .dropdown-item:hover {
            background-color: #f8f9fa;
        }
        .action-menu .dropdown-item.text-danger:hover {
            background-color: #dc3545;
            color: white;
        }
        .hamburger-icon {
            width: 16px;
            height: 16px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            cursor: pointer;
        }
        .hamburger-icon span {
            display: block;
            width: 100%;
            height: 2px;
            background-color: #0d6efd;
            transition: all 0.3s ease;
        }
        .current-balance {
            background: linear-gradient(135deg, #0d6efd 0%, #0a58ca 100%);
            color: white;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .current-balance h2 {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            opacity: 0.9;
        }
        .current-balance .amount {
            font-size: 2.5rem;
            font-weight: bold;
            margin: 0;
        }
        .current-balance.negative {
            background: linear-gradient(135deg, #dc3545 0%, #bb2d3b 100%);
        }
        .current-balance .amount.negative {
            color: #ffebee;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Transaction Balance App</h1>
            <a href="/deposit-config" class="btn btn-outline-primary">Configure Deposits</a>
        </div>

        <div class="current-balance <%= transactions[0]?.running_balance < 0 ? 'negative' : '' %>">
            <h2>Current Balance</h2>
            <p class="amount <%= transactions[0]?.running_balance < 0 ? 'negative' : '' %>">$<%= transactions[0]?.running_balance || '0.00' %></p>
        </div>
        
        <div class="transaction-form">
            <h3>Add New Transaction</h3>
            <form action="/transaction" method="POST">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="date" class="form-label">Date</label>
                        <input type="date" class="form-control" id="date" name="date" 
                               value="<%= new Date().toISOString().split('T')[0] %>" required>
                    </div>
                    <div class="col-md-3">
                        <label for="type" class="form-label">Type</label>
                        <select class="form-select" id="type" name="type" required>
                            <option value="expense" selected>Expense</option>
                            <option value="deposit">Deposit</option>
                        </select>
                    </div>
                </div>
                <div class="row g-3 mt-2">
                    <div class="col-md-3">
                        <label for="amount" class="form-label">Amount</label>
                        <input type="number" step="0.01" class="form-control" id="amount" name="amount" min="0.01" required>
                    </div>
                </div>
                <div class="row g-3 mt-2">
                    <div class="col-md-3">
                        <label for="description" class="form-label">Description</label>
                        <input type="text" class="form-control" id="description" name="description" required>
                    </div>
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">Add Transaction</button>
                </div>
            </form>
        </div>

        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Description</th>
                        <th class="text-end">Amount</th>
                        <th class="text-end">Running Balance</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <% transactions.forEach(transaction => { %>
                        <tr data-id="<%= transaction.id %>">
                            <td>
                                <div class="view-mode">
                                    <%= transaction.date.toLocaleDateString() %>
                                </div>
                                <div class="edit-form">
                                    <input type="date" class="form-control form-control-sm" 
                                           name="date" value="<%= transaction.date.toISOString().split('T')[0] %>" required>
                                </div>
                            </td>
                            <td>
                                <div class="view-mode">
                                    <%= transaction.description %>
                                </div>
                                <div class="edit-form">
                                    <input type="text" class="form-control form-control-sm" 
                                           name="description" value="<%= transaction.description %>" required>
                                </div>
                            </td>
                            <td class="text-end">
                                <div class="view-mode <%= transaction.amount >= 0 ? 'positive-amount' : 'negative-amount' %>">
                                    <%= transaction.amount %>
                                </div>
                                <div class="edit-form">
                                    <input type="number" step="0.01" class="form-control form-control-sm text-end" 
                                           name="amount" value="<%= transaction.amount %>" required>
                                </div>
                            </td>
                            <td class="text-end <%= transaction.running_balance >= 0 ? 'positive-amount' : 'negative-amount' %>">
                                <%= transaction.running_balance %>
                            </td>
                            <td>
                                <div class="view-mode">
                                    <div class="action-menu">
                                        <div class="hamburger-icon" data-bs-toggle="dropdown" aria-expanded="false">
                                            <span></span>
                                            <span></span>
                                            <span></span>
                                        </div>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <button class="dropdown-item edit-btn">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </button>
                                            </li>
                                            <li>
                                                <form action="/transaction/<%= transaction.id %>/delete" method="POST" class="d-inline">
                                                    <button type="submit" class="dropdown-item text-danger" 
                                                            onclick="return confirm('Are you sure you want to delete this transaction?')">
                                                        <i class="bi bi-trash"></i> Delete
                                                    </button>
                                                </form>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="edit-form">
                                    <form action="/transaction/<%= transaction.id %>/update" method="POST" class="d-inline">
                                        <button type="submit" class="btn btn-sm btn-success">Save</button>
                                        <button type="button" class="btn btn-sm btn-secondary cancel-btn">Cancel</button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Type dropdown color handler
            const typeSelect = document.getElementById('type');
            function updateTypeColor() {
                typeSelect.style.color = typeSelect.value === 'expense' ? '#dc3545' : '#198754';
            }
            typeSelect.addEventListener('change', updateTypeColor);
            updateTypeColor(); // Set initial color

            // Edit button click handler
            document.querySelectorAll('.edit-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const row = this.closest('tr');
                    row.classList.add('edit-mode');
                });
            });

            // Cancel button click handler
            document.querySelectorAll('.cancel-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const row = this.closest('tr');
                    row.classList.remove('edit-mode');
                });
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', function(event) {
                if (!event.target.closest('.action-menu')) {
                    const dropdowns = document.querySelectorAll('.dropdown-menu.show');
                    dropdowns.forEach(dropdown => {
                        dropdown.classList.remove('show');
                    });
                }
            });
        });
    </script>
</body>
</html> 